// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Permission {
  USER_EDITOR
  USER_VIEWER
  USER_DELETER
}

model User {
  id    String @id @default(cuid())
  name  String
  email String @unique
  password_hash String
  role  Role   @default(USER)
  permissions Permission[] 
  created_at DateTime @default(now())

  questions Question[]
  answers QuestionExamUserAnswer[]
}


model Bank {
  id    String @id @default(cuid())
  name  String
  created_at DateTime @default(now())

  questions Question[]
}

model Exam {
  id    String @id @default(cuid())
  name  String
  created_at DateTime @default(now())

  questions Question[]
  answers QuestionExamUserAnswer[]

}

model Question {
  id    String @id @default(cuid())
  code  String @unique
  body  String
  alternative_a String
  alternative_b String
  alternative_c String
  alternative_d String
  alternative_e String
  correct_alternative String
  image String?
  explanation String?
  year String
  created_at DateTime @default(now())
  user User @relation(fields: [user_id], references: [id])
  bank Bank @relation(fields: [bank_id], references: [id])
  exam Exam @relation(fields: [exam_id], references: [id])

  user_id String
  bank_id String
  exam_id String
  answers QuestionExamUserAnswer[]
}


model QuestionExamUserAnswer {
  id    String @id @default(cuid())
  created_at DateTime @default(now())
  user User @relation(fields: [user_id], references: [id])
  exam Exam @relation(fields: [exam_id], references: [id])
  question Question @relation(fields: [question_id], references: [id])
  answer String

  user_id String
  exam_id String
  question_id String
}